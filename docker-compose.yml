services:
  db:
    image: postgres:16
    container_name: postgresdb
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: jntuh
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
  redis:
    image: redis:alpine
    container_name: redisjntuh
    ports:
      - "6379:6379"

  rabbitmq:
    image: rabbitmq:3.13-management
    container_name: rabbitmq
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin
      RABBITMQ_PROMETHEUS: "true"
    ports:
      - "5672:5672"
      - "15672:15672"
      - "15692:15692" # Expose Prometheus metrics endpoint
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 20s
      timeout: 10s
      retries: 5

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090" # Expose Prometheus on port 9090
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml # Mount Prometheus config file
      - prometheus_data:/prometheus # Mount a persistent volume for Prometheus data

  app:
    build: .
    container_name: fastapiapp
    restart: always
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql://postgres:password@postgresdb:5432/jntuh
      RABBITMQ_URL: amqp://admin:admin@rabbitmq:5672/
      REDIS_URL: redis://redisjntuh:6379/0
      QUEUE_NAME: default_queue

    ports:
      - "8000:8000"
    volumes:
      - .:/app

    entrypoint: ["/app/entrypoint.sh"]

  loki:
    image: grafana/loki:latest
    container_name: loki
    ports:
      - "3100:3100"
    volumes:
      - loki_data:/loki # Persistent storage for Loki logs

volumes:
  postgres_data:
  prometheus_data:
  loki_data: # Added persistent volume for Loki
